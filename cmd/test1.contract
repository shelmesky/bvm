contract testDefS {
    data {
      str Action
      str From
      str To
      str Amount
    }

    func myfunc1(str a) str {
        str x = testFunc(a, 100)
        arr.str as
        as += `aaa`
        return "this myfunc1..."
    }

    func myfunc2(int b) int {
        return b
    }

    func myfunc3(int c, int d) {
        str mmm = `hello mmm`
        println(mmm)
        println("this is myfunc3")
    }

    myfunc3(200, 300)

    int ret = myfunc2(100)
    println(str(ret))

    str xxx = myfunc1("xxx")
    println(xxx)

    arr.str bbb
    bbb += `bbb`
    println(bbb[0])

    map.str m1
    m1[`cccc`] = "dddd"
    println(m1[`cccc`])

    println(Action)
    println(From)
    println(To)
    println(Amount)

    int i = 0
    while i<10 {
        println(str(i))
        i += 1
    }

    return
}
